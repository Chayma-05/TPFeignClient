{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8888/SERVICE-CLIENT/clients';\nexport const getClients = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching clients:', error);\n    throw error;\n  }\n};\nexport const getClientById = async clientId => {\n  try {\n    const response = await axios.get(`${API_URL}/${clientId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching client:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getClients","response","get","data","error","console","getClientById","clientId"],"sources":["C:/Users/hp/Desktop/5eme EMSI/Architecture des composants/tpGateWay/frontEnd/src/services/ClientService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8888/SERVICE-CLIENT/clients';\r\n\r\nexport const getClients = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching clients:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getClientById = async (clientId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${clientId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching client:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8CAA8C;AAE9D,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIQ,QAAQ,EAAE,CAAC;IAC1D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}