{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8888/SERVICE-VOITURE/voitures';\nexport const getVoituresByClient = async clientId => {\n  try {\n    const response = await axios.get(`${API_URL}?clientId=${clientId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching voitures:', error);\n    throw error;\n  }\n};\nexport const getAllVoitures = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching all voitures:', error);\n    throw error;\n  }\n};\nexport const addVoiture = async (clientId, voiture) => {\n  try {\n    const response = await axios.post(`${API_URL}/${clientId}`, voiture);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding voiture:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getVoituresByClient","clientId","response","get","data","error","console","getAllVoitures","addVoiture","voiture","post"],"sources":["C:/Users/hp/Desktop/5eme EMSI/Architecture des composants/tpGateWay/frontEnd/src/services/VoitureService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8888/SERVICE-VOITURE/voitures';\r\n\r\nexport const getVoituresByClient = async (clientId) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}?clientId=${clientId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching voitures:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllVoitures = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching all voitures:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addVoiture = async (clientId, voiture) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/${clientId}`, voiture);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding voiture:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,gDAAgD;AAEhE,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,QAAQ,IAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,OAAO,aAAaE,QAAQ,EAAE,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,OAAO,CAAC;IACzC,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAOP,QAAQ,EAAEQ,OAAO,KAAK;EACrD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,IAAIE,QAAQ,EAAE,EAAEQ,OAAO,CAAC;IACpE,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}